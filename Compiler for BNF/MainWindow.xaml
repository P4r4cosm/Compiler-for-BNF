<Window x:Class="Compiler_for_BNF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Title="Compiler" Height="600" Width="800"
        Icon="Resources/mainIcon.png">
    <Window.Resources>
        <ResourceDictionary>
            <!-- Стиль для TextBox с закруглёнными углами и тенью -->
            <Style x:Key="CustomTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontFamily" Value="Consolas Code"/>
                <Setter Property="BorderBrush" Value="#BDBDBD"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="1" Direction="315" Color="LightGray" Opacity="0.5" BlurRadius="5"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!-- Триггер для IsMouseOver -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" 
                                       To="#9C27B0" 
                                       Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)"
                                        To="7"
                                        Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                        To="0.6"
                                        Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" 
                                       To="#BDBDBD" 
                                       Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)"
                                        To="5"
                                        Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                        To="0.5"
                                        Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>

                    <!-- Триггер для IsFocused -->
                    <Trigger Property="IsFocused" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                          To="3"
                                          Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" 
                                       To="#7B1FA2"  
                                        Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)"
                                        To="10"
                                        Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                        To="0.8"
                                        Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Color)"
                                       To="#9C27B0"
                                       Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                          To="2"
                                          Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" 
                                       To="#BDBDBD" 
                                       Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)"
                                        To="5"
                                        Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                        To="0.5"
                                        Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Color)"
                                       To="LightGray"
                                       Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Стиль для кнопки Runtime с закруглёнными углами -->
            <Style x:Key="CustomButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Background" Value="#9C27B0"/>
                <!-- Ваш фиолетовый цвет -->
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontFamily" Value="Consolas"/>
                <Setter Property="BorderThickness" Value="0"/>
                <!-- Убираем границу -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="5">
                                <!-- Закруглённые углы -->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="#7B1FA2" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="#9C27B0" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Стиль для горизонтального GridSplitter -->
            <Style x:Key="HorizontalGridSplitterStyle" TargetType="GridSplitter">
                <Setter Property="Background" Value="#E0E0E0"/>
                <Setter Property="Height" Value="5"/>
                <!-- Высота для горизонтального разделителя -->
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridSplitter">
                            <Border Background="{TemplateBinding Background}"
                                CornerRadius="1.5" 
                                Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Стиль для вертикального GridSplitter (если он есть в вашем интерфейсе) -->
            <Style x:Key="VerticalGridSplitterStyle" TargetType="GridSplitter">
                <Setter Property="Background" Value="#E0E0E0"/>
                <Setter Property="Width" Value="5"/>
                <!-- Ширина для вертикального разделителя -->
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0,5,0,5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridSplitter">
                            <Border Background="{TemplateBinding Background}"
                                CornerRadius="1.5" 
                                Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="5" />
            <RowDefinition Height="150" />
        </Grid.RowDefinitions>

        <!-- Кнопка "Runtime" -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0" Margin="0,0,20,10">
            <Button Style="{StaticResource CustomButtonStyle}" Margin="5" Width="120" Height="40">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Play" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <TextBlock Text="Runtime" VerticalAlignment="Center" FontFamily="Consolas" FontSize="18"/>
                </StackPanel>
            </Button>
        </StackPanel>

        <!-- Основная область с InputBox и BNFBox -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" MinWidth="200" />
            </Grid.ColumnDefinitions>

            <!-- InputBox -->
            <materialDesign:Card Grid.Column="0" Margin="5">
                <TextBox x:Name="InputBox" 
                         Style="{StaticResource CustomTextBoxStyle}"
                         materialDesign:HintAssist.Hint="Input"
                         AcceptsReturn="True" 
                         VerticalScrollBarVisibility="Auto"
                         TextWrapping="Wrap"/>
            </materialDesign:Card>

            <!-- Разделитель между InputBox и BNFBox -->
            <GridSplitter Grid.Column="1" Style="{StaticResource VerticalGridSplitterStyle}"/>

            <!-- BNFBox -->
            <materialDesign:Card Grid.Column="2" Margin="5">
                <TextBox x:Name="BNFBox" 
                         Style="{StaticResource CustomTextBoxStyle}"
                         materialDesign:HintAssist.Hint="BNF"
                         IsReadOnly="True" 
                         AcceptsReturn="True"
                         VerticalScrollBarVisibility="Auto"
                         TextWrapping="Wrap"/>
            </materialDesign:Card>
        </Grid>

        <!-- Разделитель для изменения высоты OutputBox -->
        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" Style="{StaticResource HorizontalGridSplitterStyle}"/>

        <!-- OutputBox с возможностью масштабирования -->
        <materialDesign:Card Grid.Row="3" Margin="5">
            <TextBox x:Name="OutputBox" 
                     Style="{StaticResource CustomTextBoxStyle}"
                     materialDesign:HintAssist.Hint="Output"
                     IsReadOnly="True" 
                     AcceptsReturn="True"
                     VerticalScrollBarVisibility="Auto"
                     TextWrapping="Wrap"/>
        </materialDesign:Card>
    </Grid>
</Window>